use Knowledge as knowledge.
use Actions as actionspec.
use PickupHealth as module.
use PickupOther as module.

exit = never.
order = linearall.

module DeliverFlag {
	
	% Pick up health on the way.
	if bel(status(Health, _), enemyFlagNotHome, Health < 30, (pickup(UnrealID, health, _), item(_, _, _, UnrealID)), not(navigation(noPath, _)), not(navigation(stuck, _))) then stop + PickupHealth.
		
	% Pick up specific other items.
	if bel(item(_, _, _, UnrealID), pickup(UnrealID, other, invulnerability), not(navigation(noPath, _)), not(navigation(stuck, _))) then stop + PickupOther.
		
	% If we see our dropped flag, then pick it up.
	if bel(droppedFlagAt(Location), navigation(navigation, UnrealID), not(UnrealID=Location)) then stop.
	if bel(droppedFlagAt(Location), not(navigation(navigation, _))) then navigate(Location).
		
	% Exit if you dont have opponent flag.
	if bel(self(Player, _, Team), not(flag(_, Player, _)), navigation(navigating, _)) then stop + exit-module.
	if bel(self(Player, _, Team), not(flag(_, Player, _)), not(navigation(navigating, _))) then exit-module.
	
	% If we have the flag go to our base.
	if bel(holdingFlag, ourBaseLocation(UnrealID), navigation(navigating, Location), UnrealID\=Location) then navigate(UnrealID).
}