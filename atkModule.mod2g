use UTbot as knowledge.
use Action as actionspec.

exit = never.
order = linearall.

module atkModule {
	
	if bel( self(_, _, Color), flagState(Color2, 'home'), base(Color2, Base), navigation(navigating, Position),  Color\=Color2, Base\=Position ) 
		then stop + exit-module.
	
	if bel( self(_, _, Color), flagState(Color2, 'home'), Color\=Color2, base(Color2, Base)) 
		then  exit-module.	
		
		if bel( base(Color2, Enemy), flag(Color, HolderID, _),self(_, _, Color), bot(HolderID, _, Color2,Position, _, _), Color \= Color2)
		then path(Position, Enemy) + shoot(HolderID).
				
	if percept( path(_, Enemy, _, [ H1 | [ H2 | [ H | T ] ] ] )), bel(navigation(navigating, Enemy), base(Color2, Enemy), self(_, _, Color), Color2 \= Color  )
		then stop +  adopt( goLocation(H)) + exit-module.	
	
	if percept( path(Position, Enemy, _, [ H1 | [ H2 | [ H | T ] ] ] )), bel( base(Color, Enemy), self(_, _, Color2) , Color \= Color2)
		then adopt( goLocation(H)) + exit-module.
	
		
		
	if bel( base(Color, Friendly), self(_, _, Color), bot(HolderID, _, Color2,Position, _, _) , Color \= Color2)
		then path(Position, Friendly) + shoot(HolderID).	
	
	if percept( path(_, Friendly, _, [ H1 | [ H2 | [ H | T ] ] ] )), bel(navigation(navigating, Base),base(Color, Friendly), base(Color2, Base), self(_, _, Color), Color2 \= Color)
		then stop +  adopt( goLocation(H)) + exit-module.
		
	if percept( path(_, Friendly, _, [ H1 | [ H2 | [ H | T ] ] ] )), bel( base(Color, Friendly), self(_, _, Color))
		then adopt( goLocation(H)) + exit-module.
		
		
	if true then exit-module.
	
}