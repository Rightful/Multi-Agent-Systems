use UTbot as knowledge.
use Action as actionspec.
use PickupShieldBelt as module.
use PickupThighpad as module.
use PickupVest as module.
use PickupHelmet as module.

exit = never.
order = linearall.
module PickupArmor {
		% If bel navigating to a place and no path then exit.
		if bel(navigation('noPath',_)) then exit-module.
		if bel(navigation('stuck',_)) then exit-module.
		
		% Pick all types of armour up on our way.
		if bel(armor(_, _, _, ShieldBelt), ShieldBelt < 100, pickup(UnrealID,_,'armor_shield_belt'),item(_,'armor',_,UnrealID), not(navigation('noPath',UnrealID)), not(navigation('stuck',UnrealID))) then PickupShieldBelt. 
		if bel(armor(_, _, Thighpad, _), Thighpad < 30, pickup(UnrealID,_,'armor_thighpads'), item(_,'armor',_,UnrealID), not(navigation('noPath',UnrealID)), not(navigation('stuck',UnrealID))) then PickupThighpad. 
		if bel(armor(_, Vest, _, _), Vest < 50, pickup(UnrealID,_,'armor_vest'), item(_,_,_,UnrealID), not(navigation('noPath',UnrealID)), not(navigation('stuck',UnrealID))) then PickupVest. 
		if bel(armor(Helmet, _, _, _), Helmet < 20, pickup(UnrealID,_,'armor_helmet'),item(_,_,_,UnrealID), not(navigation('noPath',UnrealID)), not(navigation('stuck',UnrealID))) then PickupHelmet. 
		
		% Exit module if no armour left or full score.
		if bel(not(item(_,'armor',_,_))) then exit-module.
		if bel(status(_,Armor), Armor > 80) then exit-module.
}
