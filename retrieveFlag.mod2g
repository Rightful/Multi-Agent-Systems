use UTbot as knowledge.
use Action as actionspec.
use PickupWeapon as module.
use PickupHealth as module.

exit = never.
order = linear.
module retrieveFlag {
			% if you see our dropped flag, then pick it up.
		if bel(droppedFlagAt(Location), navigation(navigation,ID), not(ID=Location)) then stop.
		if bel(droppedFlagAt(Location), not(navigation(navigation,_))) then navigate(Location).
		
		%stop if you have the enemy flag
		if bel(flag(_,Player,_), self(Player,_,_)) then exit-module.
		
		% pick up health on our way
		if bel(status(Health,_), Health < 100,(pickup(UnrealID,'health',_),item(_,_,_,UnrealID)), not(navigation('noPath',_)), not(navigation('stuck',_))) then PickupHealth.
		% pick up weapons on our way
		if bel(pickup(UnrealID,'weapon',_), item(_,'weapon',NewWeapon,UnrealID), currentWeapon(CurrentWeapon,_), betterWeapon(NewWeapon,CurrentWeapon), not(weapon(NewWeapon,_,_)), not(navigation('noPath',_)), not(navigation('stuck',_))) then PickupWeapon.
		
		%stop if the flag is back at base
		if bel(self(_,_,Team), flagState(Team,'home'), navigation(navigating,_)) then stop + exit-module.
		if bel(self(_,_,Team), flagState(Team,'home'), not(navigation(navigating,_))) then exit-module.
		
		%if flag is on ground, go to it.
		if bel(droppedFlagAt(Location), navigation(navigating,ID), not(ID=Location)) then stop.
		if bel(droppedFlagAt(Location), not(navigation(navigating,_))) then navigate(Location).

		%if you do not see the flag, search the area around the enemy base.
		if bel(enemyFlagNotHome, navigation(navigating,ID2), closeToEnemyBaseNavPoint(ID) ,ID2\=ID) then stop.
		if bel(enemyFlagNotHome, closeToEnemyBaseNavPoint(ID), not(navigation(navigating,_))) then navigate(ID).
}