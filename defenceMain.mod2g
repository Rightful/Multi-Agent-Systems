use UTbot as knowledge.
use Action as actionspec.
use PickupArmor as module.
use PickupHealth as module.
use PickupOther as module.
use selectWeapon as module.


module defenceMain {
	% TEST: new def PickupSystem
	
	%if bel(status(_,Armor), Armor < 80, item(_,'armor',_,_)) then PickupArmor.
	%if bel(status(Health,_), Health < 100,(pickup(UnrealID,'health',_),item(_,_,_,UnrealID)), not(navigation('noPath',_)), not(navigation('stuck',_))) then PickupHealth.

	%if bel(item(_,'other',O,UnrealID), not(holdingFlag), not(O=invisibility), not(O=jump_boots), not(O=berserk), not(navigation('noPath',_)), not(navigation('stuck',_))) then stop + PickupOther.
		
	if goal(goLocationFlag(Position)) then drop(goLocationFlag(Position)) + navigate(Position).
		
	if goal(goHomeWithFlag(Position)) then drop(goHomeWithFlag(Position)) + navigate(Position).
		
	if goal(goLocationHelp(Position, UnrealID)) then drop(goLocationHelp(Position, UnrealID)) + shoot(UnrealID) + navigate(Position).
	
	if goal(goLocationFlagEnemy(Position)) then drop(goLocationFlagEnemy(Position)) + navigate(Position).
	
	if goal(goRandom(Position)) then drop(goRandom(Position)) + navigate(Position).
	
	if goal(goLocationKill(Position, UnrealID)) then drop(goLocationKill(Position, UnrealID)) + shoot(UnrealID) + navigate(Position).
	
	if goal(goLocation(Position)) then drop(goLocation(Position)) + navigate(Position).
	
	
}