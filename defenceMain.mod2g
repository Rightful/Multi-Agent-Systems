use UTbot as knowledge.
use Action as actionspec.
use PickupArmor as module.
use PickupHealth as module.
use PickupOther as module.
use PickupWeapon as module.
use deliverFlag as module.
use retrieveFlag as module.
use hangAroundBase as module.
use defenderCaptureFlag as module.


module defenceMain {
	
		%if the defender takes the flag, it should deliver it.	
	 	if bel(holdingFlag) then deliverFlag.

		% als een defender bot in de buurt van de tegenstander vlag is en onze vlag is veilig, dan pak de flag van de tegenstander.
		if bel(self(Player,_,Team), flagState(Team,'home'), flagState(Team2,'home'), not(Team=Team2),ownLocation(A,B,_), enemyBaseLocation(location(X,Y,_)), A>X-750, A<X+750, B>Y-750, B<Y+750) then defenderCaptureFlag.

		% if both flags are home then hangAroundBase 
		if bel(self(Player,_,Team), not(flag(_,Player,_)), flagState(Team,'home'), flagState(Team2,'home'), not(Team=Team2)) then hangAroundBase.
		
		% voor nu: if we have the blue flag and they do not have our flag, then hangAroundBase.
		if bel(self(Player,_,Team), flagState(Team2,Status), not(Status='home'), not(Team=Team2), not(flag(Team2,Player,_)), flagState(Team,'home')) then hangAroundBase.
		
		% if opponent has our flag then retreiveFlag
		if bel(self(Player,_,Team), not(flag(_,Player,_)), flagState(Team,'held')) then retrieveFlag.

		%navigate to destination if there is a goal to do so.
		if a-goal(at(Destination)) then navigate(Destination).
		
		% if no action then navigate somewhere close to base
		if bel(closeToOurBaseNavPoint(UnrealID)) then navigate(UnrealID).
}