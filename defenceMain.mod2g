use UTbot as knowledge.
use Action as actionspec.
use PickupArmor as module.
use PickupHealth as module.
use PickupOther as module.
use PickupWeapon as module.
use deliverFlag as module.
use retrieveFlag as module.
use terminateFlagCarrier as module.


module defenceMain {
	
	%if the bot sees an enemy he should terminate him.
	if a-goal(fraggedBot(UnrealID)) then terminateFlagCarrier.
	
	% pick up health on our way
	if bel(status(Health,_), Health < 100,(pickup(UnrealID,'health',_),item(_,_,_,UnrealID)), not(navigation('noPath',_)), not(navigation('stuck',_))) then PickupHealth.
		
	% pick up weapons on our way
	if bel(pickup(UnrealID,'weapon',_), item(_,'weapon',NewWeapon,UnrealID), currentWeapon(CurrentWeapon,_), betterWeapon(NewWeapon,CurrentWeapon), not(weapon(NewWeapon,_,_)), not(navigation('noPath',_)), not(navigation('stuck',_))) then PickupWeapon.
		
	% Let the bot go to a module to pick up armor if needed.
	if bel(status(_,Armor), Armor < 80, item(_,'armor',_,_)) then PickupArmor.
		
	% pick up other items
	if bel(item(_,_,_,UnrealID), pickup(UnrealID,'other',O), not(O=invisibility), not(O=jump_boots), not(O=berserk), not(navigation('noPath',_)), not(navigation('stuck',_))) then PickupOther.
	
	if goal(goLocationFlag(Position)) then drop(goLocationFlag(Position)) + navigate(Position).
		
	if goal(goHomeWithFlag(Position)) then drop(goHomeWithFlag(Position)) + navigate(Position).
		
	if goal(goLocationHelp(Position, UnrealID)) then drop(goLocationHelp(Position, UnrealID)) + navigate(Position).
	
	if goal(goLocationFlagEnemy(Position)) then drop(goLocationFlagEnemy(Position)) + navigate(Position).
	
	if goal(goRandom(Position)) then drop(goRandom(Position)) + navigate(Position).
	
	if goal(goLocationKill(Position, UnrealID)) then drop(goLocationKill(Position, UnrealID)) + navigate(Position).
	
	if goal(goLocation(Position)) then drop(goLocation(Position)) + navigate(Position).
}