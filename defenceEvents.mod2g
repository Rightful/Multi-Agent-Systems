use UTbot as knowledge.
use Action as actionspec.
order = linearall.

module defenceEvents {
	
	
	% If the bot sees an item that is a weapon(but not the bio gun) or ammo for one, adopt the goal to get it.
	if bel(item(UnrealID,Label,ItemType,Position), inRadius(UnrealID), weapon(enforcer,_,_)), not(bel(item(UnrealID,Label,bio_rifle,Position))) then adopt(goLocation(UnrealID)).
	
	% if you have been fragged then delete all (at +  fraggedBot) goals.
	forall a-goal(fraggedBot(A,location(X,Y,Z))), bel(self(Victim,_,_), fragged(_,_,Victim,_)) do drop(fraggedBot(A,location(X,Y,Z))).
	forall a-goal(fraggedBot(A,location(X,Y,Z))), bel(not(enemyBot(A,_))) do drop(fraggedBot(A,location(X,Y,Z))).

	
	% if you see an opponent bot then adopt to kill that bot.
	 forall bel(enemyBot(UnrealID,location(X,Y,Z))) do adopt(fraggedBot(UnrealID,location(X,Y,Z))).
	 
	% The bot will adopt being at all places that are in radius of the flagbase.
	forall bel(inRadius(UnrealID)),not(a-goal(goLocation(UnrealID))) do adopt(goLocation(UnrealID)).

	% If the bot sees the flag, the bot will delete all his next locations and adopt going to the location of the flag.
	forall a-goal(goLocation(UnrealID)), bel(self(_,_,TeamColor), flag(TeamColor, none, Position), flagState(TeamColor, 'dropped'))
		do drop(goLocation(UnrealID))+ adopt(goLocationFlag(Position)).
	
	% If the flag is back at the base the goLocationFlag goal is dropped
	forall a-goal(goLocationFlag(UnrealID)), bel(self(_,_,TeamColor), flagState(TeamColor, 'home'))do drop(goLocationFlag(UnrealID)).
	
	% If the bot sees the enemybot that holds the flag, the bot will send all bots the coordinations of the bots.
	if bel(self(_,_,TeamColor), flag(TeamColor, HolderID, Position), flagState(TeamColor, 'held')) 
		then all.send!(helpDef(Position, HolderID)).
	
	% If the bot gets location of helpDef the bot will insert that location.
	if (_).sent!(helpDef(Position, HolderID))then insert(helpDef(Position, HolderID)).
	
	% If the believes gets a help defence location and has other places to go the bot will go first to the helpDef location
	forall a-goal(goLocation(UnrealID)), bel(helpDef(Position, HolderID))
		do drop(goLocation(UnrealID))+ adopt(goLocationHelp(Position)) +delete(helpDef(Position, HolderID)). 
	
	% If the bot already is fragged than the help goLocationHelp goal is dropped
	forall a-goal(goLocationHelp(Position)), bel(helpDef(Position, HolderID), fragged(_, _, HolderID, _)) do drop(goLocationHelp(Position)).

	% If the bot sees the enemy flag the bot will pick up the enemy flag
	forall a-goal(goLocation(UnrealID)), bel(self(_,_,TeamColor), flag(NotTeamColor, none, Position), flagState(NotTeamColor, _), TeamColor \= NotTeamColor)
		do drop(goLocation(UnrealID)) + adopt(goLocationFlagEnemy(Position)).
	
	% If the bot holds the flag and the FriendlyFlag is at our base. The bot will go to the base.
	forall a-goal(goLocation(UnrealID)), bel(self(HolderID,_,TeamColor), flag(NotTeamColor, HolderID, Position),ourBaseLocation(Location), flagState(TeamColor, 'home'), TeamColor \= NotTeamColor)
		do drop(goLocation(UnrealID)) + adopt(goLocationHome(Location)).
}