use UTbot as knowledge.

use killModus as module.
use PickupArmor as module.
use PickupHealth as module.
use PickupOther as module.
use PickupWeapon as module.

use Action as actionspec.
	
module attackMain {

	% pick up weapons on our way
	if bel(pickup(UnrealID,'weapon',_), item(_,'weapon',NewWeapon,UnrealID), 
	currentWeapon(CurrentWeapon,_), betterWeapon(NewWeapon,CurrentWeapon), not(weapon(NewWeapon,_,_)), 
	not(navigation('noPath',_)), not(navigation('stuck',_)), not(holdingFlag)) then PickupWeapon.
		
	if bel(status(_,Armor), Armor < 80, item(_,'armor',_,_), not(holdingFlag)) then stop + PickupArmor.
	if bel(status(Health,_), Health =< 60,(pickup(UnrealID,'health',_),item(_,_,_,UnrealID)), not(navigation('noPath',_)), not(navigation('stuck',_)), not(holdingFlag)) then stop + PickupHealth.

	% Let the bot go to a module to pick up armor if needed.
	% pick up other items
	if bel(item(_,'other',O,UnrealID), not(holdingFlag), not(O=invisibility), not(O=jump_boots), not(O=berserk), not(navigation('noPath',_)), not(navigation('stuck',_)), not(holdingFlag)) then stop + PickupOther.
	if goal(goGrabEnemy(Position)), bel(self(_,_,Color), not(flagState(Color2, 'home')), Color \= Color2) then drop(goGrabEnemy(Position)).
	
	if a-goal(goLocation(Position)) then drop(goLocation(Position)) + navigate(Position).
	
	if a-goal(goHealth(Position, Health)) then navigate(Position).
	
	if a-goal(goArmor(Position, Armor)) then navigate(Position).
	
	if a-goal(goItem(Position, Weapon)) then navigate(Position).
	
	if a-goal(goRack(Position)) then navigate(Position).
	
	if a-goal(goOther(Position)) then navigate(Position).	
	
}