use Knowledge as knowledge.
use Actions as actionspec.
use PickupArmor as module.
use PickupHealth as module.
use PickupOther as module.
use PickupWeapon as module.
use DeliverFlag as module.
use AroundEnemyBase as module.

	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%This is the Attack Main module. The most important thing is returning the flag. 
	%After that it's picking up item or hanging around the base.
	
module attackMain {
		
	% If we have the flag, then deliver it.	
	if bel(holdingFlag) then DeliverFlag.
	 	
	% If fellow attacker has the flag then hang around enemy base.
	if bel(self(Player, _, Team), flagState(Team2, held), Team\=Team2, not(flag(Team2, Player, _))) then AroundEnemyBase.
		
	% Pick up health on the way.
	if bel(status(Health, _), Health < 100,(pickup(UnrealID, health, _), item(_, _, _, UnrealID)), not(navigation(noPath, _)), not(navigation(stuck, _))) then PickupHealth.
		
	% Pick up weapons on the way.
	if bel(pickup(UnrealID, weapon, _), item(_, weapon, NewWeapon, UnrealID), currentWeapon(CurrentWeapon, _), betterWeapon(NewWeapon, CurrentWeapon), not(weapon(NewWeapon, _, _)), not(navigation(noPath, _)), not(navigation(stuck, _))) then PickupWeapon.
		
	% Let the bot go to a module to pick up armor if needed.
	if bel(status(_, Armor), Armor < 80, item(_, armor, _, _)) then PickupArmor.
		
	% Pick up other items.
	if bel(item(_, _, _, UnrealID), pickup(UnrealID, other, O), not(O=invisibility), not(O=jump_boots), not(O=berserk), not(navigation(noPath, _)), not(navigation(stuck, _))) then PickupOther.
		
	% Navigate to destination if there is a goal to do so.
	if a-goal(at(Destination)) then navigate(Destination).
		
	% If no action then navigate around enemy base.
	if bel(enemyBaseLocation(UnrealID)) then navigate(UnrealID).
}