use UTbot as knowledge.
use killModus as module.
use PickupArmor as module.
use PickupHealth as module.
use PickupOther as module.
use PickupWeapon as module.
use deliverFlag as module.
use terminateFlagCarrier as module.
use hangAroundOpponentBase as module.

use selectWeapon as module.

use Action as actionspec.
	
module attackMain {

		%if you have the flag, then deliver it.	
	 	if bel(holdingFlag) then deliverFlag.
	 	
		%if the bot sees an enemy he should terminate him.
		if a-goal(fraggedBot(UnrealID)) then drop(fraggedBot(UnrealID)) + terminateFlagCarrier.
		
	 	%if fellow attacker has the flag then hang around opponent base.
	 	if bel(self(Player,_,Team), flagState(Team2,'held'), Team\=Team2, not(flag(Team2,Player,_))) then hangAroundOpponentBase.
		
		% pick up health on our way
		if bel(status(Health,_), Health < 100,(pickup(UnrealID,'health',_),item(_,_,_,UnrealID)), not(navigation('noPath',_)), not(navigation('stuck',_))) then PickupHealth.
		
		% pick up weapons on our way
		if bel(pickup(UnrealID,'weapon',_), item(_,'weapon',NewWeapon,UnrealID), currentWeapon(CurrentWeapon,_), betterWeapon(NewWeapon,CurrentWeapon), not(weapon(NewWeapon,_,_)), not(navigation('noPath',_)), not(navigation('stuck',_))) then PickupWeapon.
		
		% Let the bot go to a module to pick up armor if needed.
		if bel(status(_,Armor), Armor < 80, item(_,'armor',_,_)) then PickupArmor.
		
		% pick up other items
		if bel(item(_,_,_,UnrealID), pickup(UnrealID,'other',O), not(O=invisibility), not(O=jump_boots), not(O=berserk), not(navigation('noPath',_)), not(navigation('stuck',_))) then PickupOther.
		
		%navigate to destination if there is a goal to do so.
		if a-goal(at(Destination)) then navigate(Destination).
		
		% if no action then navigate around enemy base
		if bel(enemyBaseLocation(UnrealID)) then navigate(UnrealID).
	
}